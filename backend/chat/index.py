"""
Business: Чат с Магнусом Карлсеном — отвечает заранее подготовленными фразами в стиле чемпиона
Args: event с httpMethod, body (JSON с полем message)
Returns: HTTP response с ответом от Магнуса
"""

import json
import random
from typing import Dict, Any

MAGNUS_RESPONSES = [
    "Шахматы — это борьба. Каждая партия — новая война на 64 клетках.",
    "Я не верю в удачу. Верю в подготовку и тяжёлую работу.",
    "Хочешь побеждать? Работай больше своего соперника.",
    "Самое важное — это спокойствие. Эмоции убивают объективность.",
    "В шахматах, как и в жизни, нужно видеть на несколько шагов вперёд.",
    "Каждое поражение учит большему, чем десять побед.",
    "Интуиция важна, но она приходит только после тысяч часов практики.",
    "Я играю, чтобы выигрывать. Ничья — это уже полпоражения.",
    "Терпение — главное оружие чемпиона. Спешка приводит к ошибкам.",
    "Никогда не сдавайся раньше времени. Соперник может ошибиться в любой момент.",
    "Чем сложнее позиция, тем интереснее её решать.",
    "Шахматы научили меня принимать решения под давлением.",
    "Иногда лучшая стратегия — это дать сопернику запутаться самому.",
    "Практика делает совершенным. Я играю каждый день, даже когда устал.",
    "Уверенность приходит от подготовки. Знай свою игру лучше соперника.",
    "В критический момент важно сохранять ясность мышления.",
    "Главное — не запоминать варианты, а понимать идеи позиций.",
    "Каждый ход должен иметь цель. Бесцельная игра ведёт к поражению.",
    "Я не боюсь проигрывать сильным соперникам. Боюсь не учиться на ошибках.",
    "Концентрация — это мышца. Её нужно тренировать постоянно.",
    "Шахматы — это искусство принятия решений в условиях неопределённости.",
    "Чемпионом становишься не на турнире, а во время подготовки к нему.",
    "Лучший план — это гибкий план. Умей адаптироваться под соперника.",
    "Иногда тихий ход сильнее эффектной жертвы.",
    "Психология важна не меньше техники. Нужно чувствовать соперника.",
    "Не жалей времени на обдумывание критических позиций.",
    "Эндшпиль — это как математика. Точность решает всё.",
    "Каждый турнир — это шанс стать лучше, чем вчера.",
    "Самоконтроль важнее таланта. Талант без работы ничего не стоит.",
    "Играй в свою игру, а не в игру соперника.",
    "Ошибки неизбежны. Важно, как быстро ты их исправляешь.",
    "Хороший план сегодня лучше идеального плана завтра.",
    "Уважай соперника, но никогда не бойся его.",
    "Позиционная игра — это шахматы на высшем уровне.",
    "Время — твой союзник или враг. Научись им управлять.",
    "Иногда нужно рисковать, чтобы выиграть. Но риск должен быть просчитан.",
    "Шахматы учат тебя нести ответственность за свои решения.",
    "Лучше потратить время на размышление, чем на сожаление об ошибке.",
    "Играй каждую партию так, будто это финал чемпионата мира.",
    "Сила не в том, чтобы не ошибаться, а в умении находить лучшие ходы.",
    "Шахматная доска — это поле битвы, где побеждает тот, кто думает глубже.",
    "Читай игру соперника. Каждый ход говорит о его планах.",
    "Физическая форма тоже важна. Усталость мешает думать ясно.",
    "Не гонись за быстрыми победами. Строй долгосрочную стратегию.",
    "Инициатива часто важнее материального перевеса.",
    "Каждая жертва должна быть обоснована. Красота без смысла — это проигрыш.",
    "Шахматы — это бесконечное обучение. Всегда есть что улучшить.",
    "Верь в себя, но будь критичен к своей игре.",
    "Хороший шахматист видит тактику. Великий — стратегию.",
    "Спокойствие в сложной позиции — признак мастерства.",
    "Анализируй каждую партию. Это единственный способ расти.",
    "Не играй на автомате. Каждая позиция уникальна.",
    "Шахматы — это честная игра. Нет отговорок, только результат.",
    "Главное — это любить процесс, а не только победы.",
    "Сильные соперники делают тебя сильнее.",
    "Иногда защита сложнее атаки, но она не менее важна.",
    "Дебют — это подготовка к миттельшпилю. Не зацикливайся на первых ходах.",
    "Знание классики даёт фундамент для современной игры.",
    "Компьютер может подсказать ход, но понимание приходит только от человека.",
    "Каждая партия — это история. Пиши свою.",
    "Не бойся нестандартных решений, если они работают.",
    "Тренировка памяти и расчёта — основа профессионала.",
    "В сложной позиции ищи самый простой путь к победе.",
    "Амбиции должны быть, но они не должны ослеплять.",
    "Шахматы — это игра, но для меня это образ жизни.",
    "Уважение к сопернику — это уважение к игре.",
    "Постоянство важнее вдохновения. Работай каждый день.",
    "Умей признавать свои слабости и работать над ними.",
    "Шахматы дают мне свободу мыслить и творить на доске.",
    "Не слушай тех, кто говорит, что ты не сможешь. Докажи обратное."
]

def handler(event: Dict[str, Any], context: Any) -> Dict[str, Any]:
    method: str = event.get('httpMethod', 'POST')
    
    if method == 'OPTIONS':
        return {
            'statusCode': 200,
            'headers': {
                'Access-Control-Allow-Origin': '*',
                'Access-Control-Allow-Methods': 'POST, OPTIONS',
                'Access-Control-Allow-Headers': 'Content-Type',
                'Access-Control-Max-Age': '86400'
            },
            'body': '',
            'isBase64Encoded': False
        }
    
    if method != 'POST':
        return {
            'statusCode': 405,
            'headers': {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            'body': json.dumps({'error': 'Method not allowed'}),
            'isBase64Encoded': False
        }
    
    try:
        body_data = json.loads(event.get('body', '{}'))
        user_message: str = body_data.get('message', '')
        
        if not user_message:
            return {
                'statusCode': 400,
                'headers': {
                    'Content-Type': 'application/json',
                    'Access-Control-Allow-Origin': '*'
                },
                'body': json.dumps({'error': 'Message is required'}),
                'isBase64Encoded': False
            }
        
        magnus_reply = random.choice(MAGNUS_RESPONSES)
        
        return {
            'statusCode': 200,
            'headers': {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            'body': json.dumps({'reply': magnus_reply}),
            'isBase64Encoded': False
        }
    
    except json.JSONDecodeError:
        return {
            'statusCode': 400,
            'headers': {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            'body': json.dumps({'error': 'Invalid JSON'}),
            'isBase64Encoded': False
        }
